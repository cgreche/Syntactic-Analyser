Dumping Grammar:
Grammar Symbols:
0. $eof - Terminal
1. a - Terminal
2. b - Terminal
3. c - Terminal
4. d - Terminal
5. e - Terminal
6. B - Nonterminal
7. S - Nonterminal
8. C - Nonterminal
9. $start - Nonterminal

Grammar Productions rules:
0. S -> a B c 
1. S -> b C c 
2. S -> a C d 
3. S -> b B d 
4. B -> e 
5. C -> e 
6. $start -> S $eof 

Generating states...
State 0:
K  - [$start -> .S $eof]
NK - [S -> .a B c]
NK - [S -> .b C c]
NK - [S -> .a C d]
NK - [S -> .b B d]
Processing state: 0
Creating itemsets from state: 0
State 1:
K  - [$start -> S .$eof]
State 2:
K  - [S -> b .C c]
K  - [S -> b .B d]
NK - [C -> .e]
NK - [B -> .e]
State 3:
K  - [S -> a .B c]
K  - [S -> a .C d]
NK - [B -> .e]
NK - [C -> .e]

Processing state: 1
Creating itemsets from state: 1
State 4:
K  - [$start -> S $eof.]

Processing state: 2
Creating itemsets from state: 2
State 5:
K  - [S -> b B .d]
State 6:
K  - [C -> e.]
K  - [B -> e.]
State 7:
K  - [S -> b C .c]

Processing state: 3
Creating itemsets from state: 3
State 8:
K  - [S -> a B .c]
State 6 already created
State 9:
K  - [S -> a C .d]

Processing state: 4State: 4, Saving reduction to rule6

Creating itemsets from state: 4

Processing state: 5
Creating itemsets from state: 5
State 10:
K  - [S -> b B d.]

Processing state: 6State: 6, Saving reduction to rule5
State: 6, Saving reduction to rule4

Creating itemsets from state: 6

Processing state: 7
Creating itemsets from state: 7
State 11:
K  - [S -> b C c.]

Processing state: 8
Creating itemsets from state: 8
State 12:
K  - [S -> a B c.]

Processing state: 9
Creating itemsets from state: 9
State 13:
K  - [S -> a C d.]

Processing state: 10State: 10, Saving reduction to rule3

Creating itemsets from state: 10

Processing state: 11State: 11, Saving reduction to rule1

Creating itemsets from state: 11

Processing state: 12State: 12, Saving reduction to rule0

Creating itemsets from state: 12

Processing state: 13State: 13, Saving reduction to rule2

Creating itemsets from state: 13

LR(0) - State list:
State 0:
K  - [$start -> .S $eof]
NK - [S -> .a B c]
NK - [S -> .b C c]
NK - [S -> .a C d]
NK - [S -> .b B d]
State 1:
K  - [$start -> S .$eof]
State 2:
K  - [S -> b .C c]
K  - [S -> b .B d]
NK - [C -> .e]
NK - [B -> .e]
State 3:
K  - [S -> a .B c]
K  - [S -> a .C d]
NK - [B -> .e]
NK - [C -> .e]
State 4:
K  - [$start -> S $eof.]
State 5:
K  - [S -> b B .d]
State 6:
K  - [C -> e.]
K  - [B -> e.]
State 7:
K  - [S -> b C .c]
State 8:
K  - [S -> a B .c]
State 9:
K  - [S -> a C .d]
State 10:
K  - [S -> b B d.]
State 11:
K  - [S -> b C c.]
State 12:
K  - [S -> a B c.]
State 13:
K  - [S -> a C d.]

Nullable sets:
nullable(B) = false
nullable(S) = false
nullable(C) = false
nullable($start) = false

FIRST sets:
FIRST($eof) = {$eof}
FIRST(a) = {a}
FIRST(b) = {b}
FIRST(c) = {c}
FIRST(d) = {d}
FIRST(e) = {e}
FIRST(B) = {e}
FIRST(S) = {a,b}
FIRST(C) = {e}
FIRST($start) = {a,b}

FOLLOW sets:
FOLLOW(B) = {c,d}
FOLLOW(S) = {$eof}
FOLLOW(C) = {c,d}
FOLLOW($start) = {$eof}


State 0:
K  - [$start -> .S $eof, $eof]
NK - [S -> .a B c, $eof]
NK - [S -> .b C c, $eof]
NK - [S -> .a C d, $eof]
NK - [S -> .b B d, $eof]
State 1:
K  - [$start -> S .$eof, $eof]
State 2:
K  - [S -> b .C c, $eof]
K  - [S -> b .B d, $eof]
NK - [C -> .e, c]
NK - [B -> .e, d]
State 3:
K  - [S -> a .B c, $eof]
K  - [S -> a .C d, $eof]
NK - [B -> .e, c]
NK - [C -> .e, d]
State 4:
K  - [$start -> S $eof., $eof]
State 5:
K  - [S -> b B .d, $eof]
State 6:
K  - [C -> e., c/d]
K  - [B -> e., d/c]
State 7:
K  - [S -> b C .c, $eof]
State 8:
K  - [S -> a B .c, $eof]
State 9:
K  - [S -> a C .d, $eof]
State 10:
K  - [S -> b B d., $eof]
State 11:
K  - [S -> b C c., $eof]
State 12:
K  - [S -> a B c., $eof]
State 13:
K  - [S -> a C d., $eof]
LALR(1) - State list:
State 0:
K  - [$start -> .S $eof, $eof]
NK - [S -> .a B c, $eof]
NK - [S -> .b C c, $eof]
NK - [S -> .a C d, $eof]
NK - [S -> .b B d, $eof]
State 1:
K  - [$start -> S .$eof, $eof]
State 2:
K  - [S -> b .C c, $eof]
K  - [S -> b .B d, $eof]
NK - [C -> .e, c]
NK - [B -> .e, d]
State 3:
K  - [S -> a .B c, $eof]
K  - [S -> a .C d, $eof]
NK - [B -> .e, c]
NK - [C -> .e, d]
State 4:
K  - [$start -> S $eof., $eof]
State 5:
K  - [S -> b B .d, $eof]
State 6:
K  - [C -> e., c/d]
K  - [B -> e., d/c]
State 7:
K  - [S -> b C .c, $eof]
State 8:
K  - [S -> a B .c, $eof]
State 9:
K  - [S -> a C .d, $eof]
State 10:
K  - [S -> b B d., $eof]
State 11:
K  - [S -> b C c., $eof]
State 12:
K  - [S -> a B c., $eof]
State 13:
K  - [S -> a C d., $eof]

